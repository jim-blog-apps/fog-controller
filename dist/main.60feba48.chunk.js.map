{"version":3,"sources":["images/led-circle-grey.svg","images/led-circle-yellow.svg","../external \"tty\"","../external \"zlib\"","../external \"constants\"","../external \"path\"","i18n.js","components/ArduinoButton.js","components/InputSlider.js","components/TuneDialog.js","components/AlertDialog.js","components/Led.js","App.js","serviceWorker.js","index.js","../external \"assert\"","../external \"util\"","../external \"os\"","../external \"fs\"","../external \"http\"","../external \"https\"","../external \"url\"","../external \"stream\""],"names":["module","exports","require","i18n","use","LanguageDetector","initReactI18next","init","debug","react","useSuspense","lng","fallbackLng","whitelist","interpolation","escapeValue","resources","en","translation","translation_en","fr","translation_fr","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","Component","onClick","className","children","this","props","arrow","title","Button","variant","ArduinoButton","root","width","input","InputSlider","value","state","setState","event","newValue","target","Number","min","max","onChange","classes","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","handleSliderChange","bind","aria-labelledby","step","Input","margin","handleInputChange","onBlur","handleBlur","type","inputProps","fs","os","settings","open","handleClickOpen","handleClose","handleSave","NameRef","name","ArduinoIpAddressRef","arduinoIpAddress","T1Ref","T1","NRef","N","T2Ref","T2","T3Ref","T3","nw","Window","get","resizeTo","prevState","settings_path","homedir","writeJsonSync","data","requestArduinoApi","service","t","console","log","axios","String","length","timeout","then","response","status","result","match","t1","parseInt","n","t2","t3","statusText","error","message","alert","startIcon","aria-label","Dialog","onClose","DialogTitle","DialogContent","TextField","autoFocus","label","defaultValue","e","ref","DialogContentText","DialogActions","TuneDialog","Transition","React","forwardRef","Slide","direction","text","TransitionComponent","keepMounted","aria-describedby","AlertDialog","alt","src","LedYellow","LedGrey","Led","App","changeLanguage","machine","power","fog","alertRef","createRef","timer","existsSync","readJsonSync","throws","showDevTools","setInterval","clearInterval","current","Box","handlePowerOnClicked","handlePowerOffClicked","padding","handleFogOnClicked","handleFogOffClicked","Fragment","withTranslation","AppI18n","Boolean","window","location","hostname","navigator","serviceWorker","ready","registration","unregister","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/led-circle-grey.48ced89a.svg\";","module.exports = __webpack_public_path__ + \"static/media/led-circle-yellow.05ba57aa.svg\";","module.exports = require(\"tty\");","module.exports = require(\"zlib\");","module.exports = require(\"constants\");","module.exports = require(\"path\");","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\nimport translation_en from \"../public/locales/en/translation.json\";\r\nimport translation_fr from \"../public/locales/fr/translation.json\";\r\n\r\ni18n\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        debug: true,\r\n\r\n        react: {\r\n            useSuspense: false\r\n        },\r\n\r\n        lng: 'en',\r\n        fallbackLng: 'en',\r\n        whitelist: ['en', 'fr'],\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n\r\n        resources: {\r\n            en: {\r\n                translation: translation_en               // 'common' is our custom namespace\r\n            },\r\n            fr: {\r\n                translation: translation_fr\r\n            },\r\n        },\r\n    });\r\n\r\nexport default i18n;","import React, {Component} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 220,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nclass ArduinoButton extends Component {\r\n    render() {\r\n        const {\r\n            onClick,\r\n            className = \"\",\r\n            tooltip = \"\",\r\n            children,\r\n        } = this.props;\r\n\r\n        if ('tooltip' in this.props) {\r\n            return (\r\n                <HtmlTooltip arrow title={tooltip}>\r\n                    <Button\r\n                        onClick={onClick}\r\n                        className={className}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        {children}\r\n                    </Button>\r\n                </HtmlTooltip>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button\r\n                    onClick={onClick}\r\n                    className={className}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    {children}\r\n                </Button>\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nexport default ArduinoButton;","import React, {Component} from 'react';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: 400,\r\n    },\r\n    input: {\r\n        width: 40,\r\n    },\r\n});\r\n\r\nclass InputSlider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.value = props.value;\r\n        this.state = {value: props.value};\r\n        this.setState(this.state);\r\n    }\r\n\r\n    handleSliderChange(event, newValue) {\r\n        this.value = newValue;\r\n        this.setState({value: newValue});\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        this.value = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState({value: event.target.value === '' ? '' : Number(event.target.value)});\r\n    };\r\n\r\n    handleBlur() {\r\n        if (this.value < this.props.min) {\r\n            this.value = this.props.min;\r\n        } else if (this.value > this.props.max) {\r\n            this.value = this.props.max;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        this.props.onChange(this); // => for onChange event in parent\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography id=\"input-slider\" gutterBottom>\r\n                    {this.props.title}\r\n                </Typography>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <Slider\r\n                            value={typeof this.value === 'number' ? this.value : 0}\r\n                            onChange={this.handleSliderChange.bind(this)}\r\n                            aria-labelledby=\"input-slider\"\r\n                            step={this.props.step}\r\n                            min={this.props.min}\r\n                            max={this.props.max}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Input\r\n                            className={classes.input}\r\n                            value={this.value}\r\n                            margin=\"dense\"\r\n                            onChange={this.handleInputChange.bind(this)}\r\n                            onBlur={this.handleBlur.bind(this)}\r\n                            type=\"number\"\r\n                            inputProps={{\r\n                                step: 1,\r\n                                min: this.props.min,\r\n                                max: this.props.max,\r\n                                type: 'number',\r\n                                'aria-labelledby': 'input-slider',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles) (InputSlider);","import React, {Component} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport InputSlider from 'components/InputSlider';\r\nimport axios from \"axios\";\r\n\r\nconst fs = require('fs-extra')\r\nconst os = require('os');\r\n\r\nclass TuneDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(this.props);\r\n        this.state = {settings: this.props.settings, open: false};\r\n        this.setState(this.state);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.NameRef = this.props.settings.name;\r\n        this.ArduinoIpAddressRef = this.props.settings.arduinoIpAddress;\r\n        this.T1Ref = this.props.settings.T1;\r\n        this.NRef = this.props.settings.N;\r\n        this.T2Ref = this.props.settings.T2;\r\n        this.T3Ref = this.props.settings.T3;\r\n    }\r\n\r\n    handleClickOpen() {\r\n        const win = nw.Window.get();\r\n        win.resizeTo(520, 660);\r\n        this.NameRef = this.props.settings.name;\r\n        this.ArduinoIpAddressRef = this.props.settings.arduinoIpAddress;\r\n        this.T1Ref = this.props.settings.T1;\r\n        this.NRef = this.props.settings.N;\r\n        this.T2Ref = this.props.settings.T2;\r\n        this.T3Ref = this.props.settings.T3;\r\n        this.setState({open: true});\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    handleSave() {\r\n        const prevState = this.state;\r\n        prevState.settings.name = this.NameRef;\r\n        prevState.settings.arduinoIpAddress = this.ArduinoIpAddressRef;\r\n        prevState.settings.T1 = this.T1Ref;\r\n        prevState.settings.N = this.NRef;\r\n        prevState.settings.T2 = this.T2Ref;\r\n        prevState.settings.T3 = this.T3Ref;\r\n        prevState.open = false;\r\n        //console.log(JSON.stringify(prevState))\r\n        //console.log(os.homedir());\r\n        const settings_path = os.homedir() + \"\\\\AppData\\\\Local\\\\fog_settings.json\"\r\n        fs.writeJsonSync(settings_path, prevState.settings)\r\n        this.setState(prevState);\r\n        this.props.onChange(this.props.open); // => for onChange event in parent\r\n        const data = `${this.T1Ref},${this.NRef},${this.T2Ref},${this.T3Ref}`\r\n        this.requestArduinoApi('settings', data);\r\n    }\r\n\r\n    requestArduinoApi(service=\"\", value=\"\") {\r\n        const { t } = this.props;\r\n        console.log('requestArduinoApi', service, value);\r\n        axios.get(String(value).length > 0 ? `//${this.state.settings.arduinoIpAddress}/${service}/${value}`\r\n            : `//${this.state.settings.arduinoIpAddress}/${service}`,\r\n            {timeout: 3000})\r\n            .then((response) => {\r\n                console.log(response);\r\n                const prevState = this.state\r\n                if (response.status === 200) {\r\n                    let result = response.data.match(/(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)/);\r\n                    if (result && result.length === 7) {\r\n                        prevState.settings.t1 = parseInt(result[1]);\r\n                        prevState.settings.n = parseInt(result[2]);\r\n                        prevState.settings.t2 = parseInt(result[3]);\r\n                        prevState.settings.t3 = parseInt(result[4]);\r\n                        prevState.status = \"\";\r\n                    } else {\r\n                        prevState.status = t(\"Error: unexpected answer @\") + this.state.settings.arduinoIpAddress;\r\n                    }\r\n                } else {\r\n                    prevState.status = t(\"Error: \") + response.status + response.statusText + \" @\" + this.state.settings.arduinoIpAddress;\r\n                }\r\n                this.setState(prevState); // => render\r\n            }, (error) => {\r\n                console.log(error);\r\n                const prevState = this.state\r\n                prevState.status = t(\"Network error: \") + error.message + \" @\" + this.state.settings.arduinoIpAddress;\r\n                alert(prevState.status);\r\n                this.setState(prevState); // => render\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <div className=\"TuneDialog\">\r\n                <Button startIcon={<TuneIcon/>} color=\"secondary\" aria-label=\"tune\" onClick={this.handleClickOpen}>\r\n                    Settings\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">{t('Settings')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <div>\r\n                            <TextField autoFocus margin=\"dense\" id=\"Name\" label={t('Name')}\r\n                                       type=\"text\"\r\n                                       defaultValue={this.NameRef}\r\n                                       onChange={(e) => {\r\n                                           this.NameRef = e.target.value\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField autoFocus margin=\"dense\" id=\"ArduinoIpAddress\" label={t('Arduino Prop IP Address')}\r\n                                       type=\"text\"\r\n                                       defaultValue={this.ArduinoIpAddressRef}\r\n                                       onChange={(e) => {\r\n                                           this.ArduinoIpAddressRef = e.target.value\r\n                                       }}\r\n                            />\r\n                        </div>\r\n                        <p></p>\r\n                        <InputSlider title={t(\"Fog program: T1 (minutes)\")} step={1} min={1} max={60}\r\n                                     value={this.T1Ref}\r\n                                     onChange={(e) => {\r\n                                         this.T1Ref = e.value\r\n                                     }}\r\n                        />\r\n                        <InputSlider title={t(\"Fog program: N (times)\")} step={1} min={1} max={10}\r\n                                     value={this.NRef}\r\n                                     onChange={(e) => {\r\n                                         this.NRef = e.value\r\n                                     }}\r\n                        />\r\n                        <InputSlider title={t(\"Fog program: T2 (seconds)\")} step={1} min={1} max={60}\r\n                                     value={this.T2Ref}\r\n                                     onChange={(e) => {\r\n                                         this.T2Ref = e.value\r\n                                     }}\r\n                        />\r\n                        <InputSlider title={t(\"Fog program: T3 (seconds)\")} step={1} min={1} max={60}\r\n                                     value={this.T3Ref}\r\n                                     ref={this.T3Ref}\r\n                                     onChange={(e) => {\r\n                                         this.T3Ref = e.value\r\n                                     }}\r\n                        />\r\n                        <DialogContentText>\r\n                            Fog program: spit fog every <em>T1</em> seconds, <em>N</em> times for <em>T2</em> seconds,\r\n                            pausing <em>T3</em> seconds.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleSave} color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TuneDialog;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass AlertDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {open: false, title: \"Alert\", text: \"A problem has arisen.\"};\r\n        this.setState(this.state);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClickOpen(title, text) {\r\n        this.setState({open: true, title: title, text: text});\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{this.state.title}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n                            {this.state.text}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Dismiss\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlertDialog;\r\n","import React, {Component} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LedGrey from \"images/led-circle-grey.svg\";\r\nimport LedYellow from \"images/led-circle-yellow.svg\";\r\n\r\nclass Led extends Component {\r\n    render() {\r\n        const {\r\n            state,\r\n            alt,\r\n            label,\r\n            className = \"\"\r\n        } = this.props;\r\n\r\n        return (\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <Typography>\r\n                        {label}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <img\r\n                        className={className}\r\n                        alt={alt}\r\n                        src={state === 1 ? LedYellow : LedGrey}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Led;","import React, {Component, createRef} from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ArduinoButton from 'components/ArduinoButton';\nimport TuneDialog from 'components/TuneDialog';\nimport AlertDialog from 'components/AlertDialog';\nimport Grid from '@material-ui/core/Grid';\nimport Led from 'components/Led';\nimport 'App.css';\nimport axios from 'axios';\n\nconst fs = require('fs-extra')\nconst os = require('os');\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.i18n.changeLanguage('fr');\n        const { t } = this.props;\n\n        this.state = {\n            settings: {\n                name: t('Fog Machine'),\n                arduinoIpAddress: '',\n                T1: 10,\n                N: 2,\n                T2: 5,\n                T3: 5\n            },\n            machine: {\n                power: 1,\n                fog: 0\n            },\n            status: \"\",\n        };\n\n        this.alertRef = createRef()\n        this.timer = null;\n\n        //console.log(os.homedir());\n        const settings_path = os.homedir() + \"\\\\AppData\\\\Local\\\\fog_settings.json\"\n\n        if (fs.existsSync(settings_path)) {\n            const settings = fs.readJsonSync(settings_path, {throws: false})\n            if (settings) {\n                //console.log(settings)\n                this.state.settings = settings;\n            }\n        }\n\n        if (!this.state.settings.arduinoIpAddress) {\n            this.state.status = t(\"Arduino IP address is missing\");\n        }\n    }\n\n    componentDidMount() {\n        nw.Window.get().showDevTools();\n        if (this.state.settings.arduinoIpAddress) {\n            this.requestArduinoApi();\n            console.log('CREATE TIMER');\n            this.timer = setInterval(() => {\n                    this.requestArduinoApi();\n                },\n                30 * 1000);\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    handleFogOffClicked(e) {\n        console.log('handlePowerOffClicked');\n        this.requestArduinoApi('fog', 0)\n    }\n\n    handleFogOnClicked(e) {\n        console.log('handlePowerOnClicked');\n        this.requestArduinoApi('fog', 1)\n    }\n\n    handlePowerOffClicked(e) {\n        console.log('handlePowerOffClicked');\n        this.requestArduinoApi('power', 0)\n    }\n\n    handlePowerOnClicked(e) {\n        console.log('handlePowerOnClicked');\n        this.requestArduinoApi('power', 1)\n    }\n\n    requestArduinoApi(service=\"\", value=\"\") {\n        const { t } = this.props;\n        console.log('requestArduinoApi', service, value);\n        axios.get(String(value).length > 0 ? `//${this.state.settings.arduinoIpAddress}/${service}/${value}`\n                                                : `//${this.state.settings.arduinoIpAddress}/${service}`,\n            {timeout: 3000})\n            .then((response) => {\n                console.log(response);\n                const prevState = this.state\n                if (response.status === 200) {\n                    let result = response.data.match(/(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)/);\n                    if (result && result.length === 7) {\n                        prevState.settings.T1 = parseInt(result[1]);\n                        prevState.settings.N = parseInt(result[2]);\n                        prevState.settings.T2 = parseInt(result[3]);\n                        prevState.settings.T3 = parseInt(result[4]);\n                        prevState.machine.power = parseInt(result[5]);\n                        prevState.machine.fog = parseInt(result[6]);\n                        prevState.status = \"\";\n                    } else {\n                        prevState.status = t(\"Error: unexpected answer @\") + this.state.settings.arduinoIpAddress;\n                    }\n                } else {\n                    prevState.status = t(\"Error: \") + response.status + response.statusText + \" @\" + this.state.settings.arduinoIpAddress;\n                }\n                this.setState(prevState); // => render\n            }, (error) => {\n                console.log(error);\n                const prevState = this.state\n                prevState.status = t(\"Network error: \") + error.message + \" @\" + this.state.settings.arduinoIpAddress;\n                this.alertRef.current.handleClickOpen(t(\"Warning\"), prevState.status);\n                this.setState(prevState); // => render\n            });\n    }\n\n    render() {\n        const { t } = this.props;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    {this.state.settings.name}\n                    <Box className={\"App-status-box\"}>\n                        {this.state.status}\n                    </Box>\n                </header>\n                <div className=\"App-panel\">\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Led className=\"Led\"\n                                 alt={t('Power Led')}\n                                 label={t('Power')}\n                                 state={this.state.machine.power}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Led className=\"Led\"\n                                 alt={t('Fog Led')}\n                                 label={t('Fog')}\n                                 state={this.state.machine.fog}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <p></p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                                <ArduinoButton state={this.state}\n                                               onClick={this.handlePowerOnClicked.bind(this)}>\n                                    {t('Power ON')}\n                                </ArduinoButton>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ArduinoButton state={this.state}\n                                           onClick={this.handlePowerOffClicked.bind(this)}>\n                                {t('Power OFF')}\n                            </ArduinoButton>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <p></p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} padding={10} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <ArduinoButton state={this.state}\n                                           onClick={this.handleFogOnClicked.bind(this)}>\n                                {t('Fog ON')}\n                            </ArduinoButton>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ArduinoButton state={this.state}\n                                           onClick={this.handleFogOffClicked.bind(this)}>\n                                {t('Fog OFF')}\n                            </ArduinoButton>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <p></p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} padding={10} alignItems=\"center\">\n                        <Grid item xs={9}>\n                            <ArduinoButton tooltip={\n                                <React.Fragment>\n                                    <Typography color=\"inherit\">{t('Start Arduino fog sequence')}</Typography>\n                                    <hr/>\n                                    {t('The fog sequence is controlled by the Arduino <em>onboard</em> sketch')}\n                                </React.Fragment>\n                            }\n                                           state={this.state}\n                                           onClick={this.handleFogOnClicked.bind(this)}>\n                                {t('Start arduino fog program')}\n                            </ArduinoButton>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <ArduinoButton tooltip={\n                                <React.Fragment>\n                                    <Typography color=\"inherit\">{t('Stop Arduino fog sequence')}</Typography>\n                                </React.Fragment>\n                            }\n                                           state={this.state}\n                                           onClick={this.handleFogOffClicked.bind(this)}>\n                                {t('Stop')}\n                            </ArduinoButton>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <p></p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} padding={10} alignItems=\"center\">\n                        <Grid item xs={9}>\n                            <Button state={this.state}\n                                    color=\"primary\"\n                                    onClick={this.handleFogOnClicked.bind(this)}>\n                                {t('Start fog program')}\n                            </Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button state={this.state}\n                                    color=\"primary\"\n                                    onClick={this.handleFogOffClicked.bind(this)}>\n                                {t('Stop')}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <p></p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} padding={10} alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <TuneDialog\n                                t = {t}\n                                settings={this.state.settings}\n                                onChange={(e) => {\n                                    const prevState = this.state;\n                                    if (this.state.settings.arduinoIpAddress) {\n                                        prevState.status = \"\";\n                                        this.requestArduinoApi();\n                                        console.log('RECREATE TIMER');\n                                        clearInterval(this.timer);\n                                        this.timer = setInterval(() => {\n                                                this.requestArduinoApi();\n                                            },\n                                            30 * 1000);\n                                    } else {\n                                        prevState.status = t(\"Arduino IP address is missing\");\n                                    }\n                                    this.setState(prevState)\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <AlertDialog\n                                ref={ this.alertRef}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                            </AlertDialog>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst AppI18n = withTranslation()(App)\n\n// i18n translations might still be loaded by the http backend\n// use react's Suspense\nexport default AppI18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = require(\"assert\");","module.exports = require(\"util\");","module.exports = require(\"os\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"url\");","module.exports = require(\"stream\");"],"sourceRoot":"","file":"main.60feba48.chunk.js"}